name: Lint, Test, Build and Release

permissions:
  contents: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  lint:
    name:  Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run linter
        run: ruff check .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libegl1
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run tests
        run: pytest

  build:
    name: Build Executable
    needs: [lint, test]
    runs-on: windows-latest
    # Only run build job for releases, not on every push/pr
    if: github.event_name == 'release'

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # PyInstaller is in dev requirements
          pip install -r requirements-dev.txt
      - name: Build executable with PyInstaller
        run: pyinstaller --onefile --windowed --add-data "config.json;." --add-data "data/templates;data/templates" gui_main.py
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/gui_main.exe
          asset_name: ShopifyFulfillmentTool-v${{ github.ref_name }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
